#!/bin/bash
# vim: set syntax=bash:


# VARIABLES ###################################################################
_USER=${SUDO_USER}
_HOME=$(eval echo ~${_USER})

# Script base directory (resolving symlinks)
_BASEDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
    _BASEDIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$_BASEDIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
_BASEDIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && cd .. && pwd )"

_PROJECT=${PWD##*/}
_ENV=${1:-dev}


# VALIDATION ##################################################################
case $_ENV in
    dev)
        _MOUNTARGS="--mount type=bind,source="${_BASEDIR}",target=/app"
        ;;
    prod)
        _MOUNTARGS=""
        ;;
    *)
        echo "ERROR: Build env not known: $_ENV"
        exit 1
        ;;
esac


# MAIN ########################################################################
echo "Running docker image ${_USER}/${_PROJECT}:${_ENV}"
echo " - MOUNT ARGS: ${_MOUNTARGS}"
doas docker run ${_MOUNTARGS} --publish 5000:5000 "${_USER}/${_PROJECT}:${_ENV}"
